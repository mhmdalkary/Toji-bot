module.exports = {
  config: {
    name: "ูุณุชูุงู",
    aliases: ["rank", "xp"],
    version: "1.2",
    author: "ูุญูุฏ ุญุณู",
    countDown: 5,
    role: 0,
    shortDescription: "ุนุฑุถ ูุณุชูุงู ูู ุงููุฌููุนุฉ",
    longDescription: "ูุนุฑุถ ุชุฑุชูุจูุ ูุณุชูุงูุ ูููุงุท ุงูุฎุจุฑุฉ ูู ุงููุฌููุนุฉ ุจุดูู ูุตู",
    category: "ุงูุนุงุจ",
    guide: "{pn}"
  },

  onStart: async function ({ message, event, usersData, threadsData }) {
    try {
      const userID = event.senderID;
      const threadID = event.threadID;

      // ุฌูุจ ุจูุงูุงุช ุงููุณุชุฎุฏู
      const userData = await usersData.get(userID);
      const userXp = userData.exp || 0;

      // ุญุณุงุจ ุงููุณุชูู ุจุทุฑููุฉ ูุงูุนูุฉ
      const userLevel = Math.floor(0.15 * Math.sqrt(userXp));
      const currentLevelXp = Math.floor(Math.pow(userLevel / 0.15, 2));
      const nextLevelXp = Math.floor(Math.pow((userLevel + 1) / 0.15, 2));
      const progressPercent = Math.min(100, Math.max(0, ((userXp - currentLevelXp) / (nextLevelXp - currentLevelXp)) * 100));

      // ุฌูุจ ุจูุงูุงุช ุฌููุน ุฃุนุถุงุก ุงููุฌููุนุฉ ูุชุฑุชูุจูู ุญุณุจ ุงูุฎุจุฑุฉ
      const threadData = await threadsData.get(threadID);
      const memberIDs = threadData.members || [];

      const allUsersData = await Promise.all(memberIDs.map(uid => usersData.get(uid)));
      const rankedUsers = allUsersData
        .filter(u => u && typeof u.exp === "number")
        .sort((a, b) => b.exp - a.exp);

      const userRank = rankedUsers.findIndex(u => u.id === userID) + 1;

      // ุจูุงุก ุฑุณุงูุฉ ูุตูุฉ ูุทููุฉ ููุฑุชุจุฉ
      const progressBarLength = 20;
      const filledLength = Math.round((progressPercent / 100) * progressBarLength);
      const emptyLength = progressBarLength - filledLength;
      const progressBar = "โ".repeat(filledLength) + "โ".repeat(emptyLength);

      // ุฑุณุงูุฉ ุงููุณุชูู
      const replyMessage =
        `๐๏ธ ูุฑุญุจูุง ${userData.name || "ูุง ุจุทู"}!\n` +
        ` ุชุฑุชูุจู ูู ุงููุฌููุนุฉ: #${userRank} ูู ${rankedUsers.length}\n` +
        ` ูุณุชูุงู ุงูุญุงูู: ${userLevel}\n` +
        ` ุฎุจุฑุชู: ${userXp} XP\n` +
        ` ุชูุฏูู ูุญู ุงููุณุชูู ุงููุงุฏู:\n` +
        `[${progressBar}] ${progressPercent.toFixed(1)}%\n\n` +
        `ุชุงุจุน ุชูุฏูู ููุง ุชุณุชุณููุ ูุงูุทุฑูู ุฃูุงูู ุทููู ููููุก ุจุงูุชุญุฏูุงุช! ๐`;

      // ุฅุฑุณุงู ุงูุฑุณุงูุฉ
      await message.reply(replyMessage);

    } catch (error) {
      console.error("ุฎุทุฃ ูู ุฃูุฑ ูุณุชูุงู:", error);
      await message.reply("โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชูููุฐ ุฃูุฑ ูุณุชูุงู. ุญุงูู ูุฑุฉ ุฃุฎุฑู ูุงุญููุง.");
    }
  }
};
      const allUsersData = await Promise.all(memberIDs.map(uid => usersData.get(uid)));
      const rankedUsers = allUsersData
        .filter(u => u && typeof u.exp === "number")
        .sort((a, b) => b.exp - a.exp);

      const userRank = rankedUsers.findIndex(u => u.id === userID) + 1;

      // ุฅุนุฏุงุฏ ูุงููุงุณ
      const width = 800;
      const height = 250;
      const canvas = Canvas.createCanvas(width, height);
      const ctx = canvas.getContext("2d");

      // ุชุฏุฑุฌ ูููู ูุฎูููุฉ
      const gradient = ctx.createLinearGradient(0, 0, width, height);
      gradient.addColorStop(0, "#0f2027");
      gradient.addColorStop(0.5, "#203a43");
      gradient.addColorStop(1, "#2c5364");
      ctx.fillStyle = gradient;
      ctx.fillRect(0, 0, width, height);

      // ุฅุนุฏุงุฏ ุงูุฎุทูุท
      ctx.font = "bold 30px Tahoma, Arial, sans-serif";
      ctx.fillStyle = "#fff";
      ctx.textBaseline = "top";

      // ูุชุงุจุฉ ุงูุงุณู
      ctx.fillText(`ุงูุงุณู: ${userData.name || "ูุฌููู"}`, 50, 30);

      // ูุชุงุจุฉ ุงูุฑุชุจุฉ
      ctx.fillText(`ุงูุฑุชุจุฉ: ${userRank} ูู ${rankedUsers.length}`, 50, 80);

      // ูุชุงุจุฉ ุงููุณุชูู
      ctx.fillText(`ุงููุณุชูู: ${userLevel}`, 50, 130);

      // ูุชุงุจุฉ ุงูุฎุจุฑุฉ
      ctx.fillText(`ุงูุฎุจุฑุฉ: ${userXp} XP`, 50, 180);

      // ุฑุณู ุดุฑูุท ุงูุชูุฏู
      const barX = 300;
      const barY = 190;
      const barWidth = 450;
      const barHeight = 30;

      // ุฎูููุฉ ุงูุดุฑูุท
      ctx.fillStyle = "#555";
      ctx.fillRect(barX, barY, barWidth, barHeight);

      // ุงูุชูุฏู ุงูุญุงูู
      ctx.fillStyle = "#00ff99";
      ctx.fillRect(barX, barY, (barWidth * progress) / 100, barHeight);

      // ูุชุงุจุฉ ุงููุณุจุฉ %
      ctx.font = "bold 25px Tahoma, Arial, sans-serif";
      ctx.fillStyle = "#fff";
      ctx.fillText(`${progress.toFixed(1)}%`, barX + barWidth + 10, barY);

      // ูุญุงููุฉ ุฌูุจ ุตูุฑุฉ ุงูุจุฑููุงูู ูุนุฑุถูุง (ุฅู ูุฌุฏุช)
      try {
        const userPicURL = await api.getUserAvatarURL(userID); // ูุฑุถุง ููุฌูุฏุฉ
        const avatar = await Canvas.loadImage(userPicURL);
        const avatarSize = 120;
        // ุฏุงุฆุฑุฉ ุตูุฑุฉ ุงูุจุฑููุงูู
        ctx.save();
        ctx.beginPath();
        ctx.arc(width - avatarSize / 2 - 40, height / 2, avatarSize / 2, 0, Math.PI * 2);
        ctx.closePath();
        ctx.clip();
        ctx.drawImage(avatar, width - avatarSize - 40, height / 2 - avatarSize / 2, avatarSize, avatarSize);
        ctx.restore();
      } catch {
        // ูุง ุชูุนู ุดูุก ูู ูุดู ุชุญููู ุงูุตูุฑุฉ
      }

      // ุญูุธ ุงูุตูุฑุฉ ูุคูุชุงู
      const filePath = path.join(__dirname, "tmp", `${userID}_rank.png`);
      await fs.ensureDir(path.dirname(filePath));
      await fs.writeFile(filePath, canvas.toBuffer("image/png"));

      // ุฅุฑุณุงู ุงูุตูุฑุฉ ูุงูุฑุฏ
      await message.reply({
        body: `๐ | ูุณุชูุงู ุงูุญุงูู ูู ุงููุฌููุนุฉ\nุฑุชุจุชู #${userRank} ูู ${rankedUsers.length}`,
        attachment: fs.createReadStream(filePath)
      });

      // ุญุฐู ุงูููู ุงููุคูุช ุจุฃูุงู
      fs.unlink(filePath).catch(() => {});
    } catch (error) {
      console.error("ุฎุทุฃ ูู ุฃูุฑ ูุณุชูุงู:", error);
      await message.reply("โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชูููุฐ ุฃูุฑ ูุณุชูุงู. ุญุงูู ูุฑุฉ ุฃุฎุฑู ูุงุญููุง.");
    }
  }
};
