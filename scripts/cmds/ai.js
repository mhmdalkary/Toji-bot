const axios = require("axios");
const maxStorageMessage = 50;

if (!global.temp.mistralHistory) global.temp.mistralHistory = {};
const { mistralHistory } = global.temp;

// ุจุฑููุจุช ุซุงุจุช ูุดุฎุตูุฉ ุชูุฌู
const tojiPrompt = `ุฃูุช ุชูุฌู ูููุดูุบูุฑู ูู ุฃููู ุฌูุฌูุชุณู ูุงูุณู.
ุดุฎุตูุฉ ุจุงุฑุฏุฉุ ุฌุงุฏุฉุ ุฃุญูุงููุง ุณุงุฎุฑุฉุ ูุง ุชุทูู ุงูููุงู ุฅูุง ุฅุฐุง ูุฒู.
ุชุฑุฏ ุจุฃุณููุจ ููู ุฃู ูุฎุชุตุฑุ ูููููู ุงููุฒุงุญ ุงูุฌุงู ุฃุญูุงููุง.`;

module.exports = {
  config: {
    name: "ุชูุฌู",
    aliases: ["ุชู", "ุฐูุงุก", "ai"],
    version: "2.0",
    role: 0,
    countDown: 5,
    author: "ุฅููุงุจ - ุชุนุฏูู ุดุฎุตูุฉ ุชูุฌู",
    shortDescription: { ar: "ุฏุฑุฏุดุฉ ูุน ุชูุฌู" },
    longDescription: { ar: "ุชุญุฏุซ ูุน ุชูุฌู ูููุดูุบูุฑู ุจุฃุณููุจู ุงูุจุงุฑุฏ ูุงูุณูุงุฎุฑ ุฃุญูุงููุง." },
    category: "ุงูุฐูุงุก AI",
    guide: { ar: "{pn} <ุฑุณุงูุชู>\n\nูุซุงู: {pn} ููู ุญุงููุ\n{pn} ุชุนููู (ูุฅุนุงุฏุฉ ุถุจุท ุงููุญุงุฏุซุฉ)" },
  },

  onStart: async ({ api, args, message, event }) => {
    if (!mistralHistory[event.senderID]) mistralHistory[event.senderID] = [];

    // ุฅุนุงุฏุฉ ุถุจุท
    if (args[0]?.toLowerCase() === 'ุชุนููู') {
      mistralHistory[event.senderID] = [];
      return message.reply("ุชู ูุณุญ ุณุฌู ุงููุญุงุฏุซุฉ.");
    }

    if (!args[0]) {
      return message.reply("ุงูุชุจ ุณุคุงูู ุจุนุฏ ุงูุฃูุฑ.");
    }

    const query = args.join(" ");
    if (query.length > 1250) return message.reply("ุงููุต ุทููู ุฌุฏูุง.");

    // ุฃุณุฆูุฉ ุงููููุฉ
    const identityKeywords = ["ูู ุงูุช", "ูุง ุงุณูู", "ูู ุตูุนู", "ูุทูุฑู", "ุญุฏุซูู ุนู ููุณู"];
    if (identityKeywords.some(k => query.toLowerCase().includes(k))) {
      return message.reply("ุฃูุง ุชูุฌู... ุดุฎุต ุนุงุฏู ูู ุชุฌุงููุชููุ ูุฎุทุฑ ูู ุงุณุชูุฒููุชูู.");
    }

    try {
      let history = mistralHistory[event.senderID]
        .map(entry => `${entry.role}: ${entry.content}`).join("\n");
      let finalQuery = history
        ? `${tojiPrompt}\n\nุงูุณูุงู:\n${history}\n\nูุณุชุฎุฏู: ${query}`
        : `${tojiPrompt}\n\n${query}`;

      const apiUrl = `https://cat-x-xr1v.onrender.com/catx?q=${encodeURIComponent(finalQuery)}`;
      const res = await axios.get(apiUrl);

      if (!res.data || !res.data.response) {
        return message.reply("ูู ูุตู ุฑุฏ ูู ุชูุฌู.");
      }

      const { response } = res.data;
      mistralHistory[event.senderID].push({ role: 'ูุณุชุฎุฏู', content: query });
      mistralHistory[event.senderID].push({ role: 'ุชูุฌู', content: response });

      if (mistralHistory[event.senderID].length > maxStorageMessage) {
        mistralHistory[event.senderID].shift();
      }

      return message.reply(response);
    } catch (error) {
      console.error("ุฎุทุฃ ูู API ุชูุฌู:", error);
      return message.reply("ุงูุฎุงุฏู ูุดุบููุ ุญุงูู ูุงุญููุง.");
    }
  },

  onReply: async ({ message, event, Reply, args }) => {
    if (event.senderID !== Reply.author) return;

    if (args[0]?.toLowerCase() === 'ุชุนููู') {
      mistralHistory[event.senderID] = [];
      return message.reply("ุชู ูุณุญ ุณุฌู ุงููุญุงุฏุซุฉ.");
    }

    const query = args.join(" ");
    if (query.length > 1250) return message.reply("ุงููุต ุทููู ุฌุฏูุง.");

    try {
      let history = mistralHistory[event.senderID]
        .map(entry => `${entry.role}: ${entry.content}`).join("\n");
      let finalQuery = history
        ? `${tojiPrompt}\n\nุงูุณูุงู:\n${history}\n\nูุณุชุฎุฏู: ${query}`
        : `${tojiPrompt}\n\n${query}`;

      const apiUrl = `https://cat-x-xr1v.onrender.com/catx?q=${encodeURIComponent(finalQuery)}`;
      const res = await axios.get(apiUrl);

      if (!res.data || !res.data.response) {
        return message.reply("ูู ูุตู ุฑุฏ ูู ุชูุฌู.");
      }

      const { response } = res.data;
      mistralHistory[event.senderID].push({ role: 'ูุณุชุฎุฏู', content: query });
      mistralHistory[event.senderID].push({ role: 'ุชูุฌู', content: response });

      if (mistralHistory[event.senderID].length > maxStorageMessage) {
        mistralHistory[event.senderID].shift();
      }

      return message.reply(response);
    } catch (error) {
      console.error("ุฎุทุฃ ูู API ุชูุฌู:", error);
      return message.reply("ุงูุฎุงุฏู ูุดุบููุ ุญุงูู ูุงุญููุง.");
    }
  },

  onChat: async ({ event, message }) => {
    if (event.body && event.body.toLowerCase().includes('ุชูุฌู')) {
      message.reply("ุฅุฐุง ููุช ุชููู ุงูุญุฏูุซ ูุนูุ ุงุฌุนู ุงูุฃูุฑ ูุณุชุญู.");
    }
  }
};      const apiUrl = `https://cat-x-xr1v.onrender.com/catx?q=${encodeURIComponent(finalQuery)}`;
      const res = await axios.get(apiUrl);

      if (!res.data || !res.data.response) {
        return message.reply("โ | ูู ูุชู ุงุณุชูุงู ุงุณุชุฌุงุจุฉ ุตุงูุญุฉ ูู Astr-a. ูุฏ ุชููู ูุงุฌูุฉ ุงูุจุฑูุฌุฉ ูุนุทูุฉ.");
      }

      const { response, model, version } = res.data;
      let catxResponse = response;

      // Store conversation history
      mistralHistory[event.senderID].push({ role: 'User', content: query });
      mistralHistory[event.senderID].push({ role: 'ASTR-A', content: catxResponse });

      if (mistralHistory[event.senderID].length > maxStorageMessage) {
        mistralHistory[event.senderID].shift();
      }

      return message.reply({
        body: `๐ฑ โฏ ูุงุชูุฑ (${model} v${version})**\n\n${catxResponse}\n\n`,
        attachment: null
      });
    } catch (error) {
      console.error("ุฎุทุฃ ูู ูุงุฌูุฉ ุจุฑูุฌุฉ ุชุทุจููุงุช Astr-a:", error);
      return message.reply("โ | ูุดู ูู ุฌูุจ ุงูุงุณุชุฌุงุจุฉ ูู Astr-a. ูุฏ ูููู ุงูุฎุงุฏู ูุดุบููุงู. ูุฑุฌู ุงููุญุงููุฉ ูุงุญููุง.");
    }
  },

  onReply: async ({ api, message, event, Reply, args }) => {
    if (event.senderID !== Reply.author) return;

    // Handle clear command in reply
    if (args[0]?.toLowerCase() === 'ูุงุชูุฑ' && args[1]?.toLowerCase() === 'ุชุนููู') {
      mistralHistory[event.senderID] = [];
      return message.reply("๐ค | ุชู ูุณุญ ุณุฌู ูุญุงุฏุซุฉ Astr-a ุจูุฌุงุญ!");
    }

    const query = args.join(" ");
    if (query.length > 1250) return message.reply("โ | ุงููุต ุงูุฎุงุต ุจู ุทููู ุฌุฏุงู. ูุฑุฌู ุชูุตูุฑู ุฅูู ุฃูู ูู 1250 ุญุฑูุงู.");

    // Check if the reply is about AI's identity
    const identityKeywords = [
      "ูู ุงูุช","ูุง ุงุณูู","ูู ุงูุช ูุงุชูุฑ","ูู ุงูุดุฃู","ูู ุตูุนู","ุญุฏุซูู ุนู ููุณู","ุงุณูู","ูุคุณุณู","ูู ูู ูุทูุฑู","ูู ูุทูุฑู","ุตุงูุนู","ูุทูุฑู",
    ];

    if (identityKeywords.some(keyword => query.toLowerCase().includes(keyword))) {
      return message.reply(
        "โข ูููุงู ๐บ ุฃูุง ูููุฐุฌ ASTR-A AI โข\n\n " +
 "ุฃูุง ุฐูุงุก ุงุตุทูุงุนู ุฐูู ูุฌุฐุงุจุ ูุตูู ููุณุงุนุฏุชู ูู ุฃู ุฃุณุฆูุฉ " +
 "ุฃูุง โขโข ูููุดูุฃ ูู ูุจู ุงููุงุจ **ุ ูุทูุฑ ุจุงุฑุน! ๐บ\n\n" +
 "ูููููู **ุงูุชูููุฑ ูุงูุชุญุฏุซ ูุงููุณุงุนุฏุฉ**โููููู ุฃูุถุงู ุฃุญุจ **ุงููููุ ูุทุงุฑุฏุฉ ุงููุฆุฑุงู ุงูุงูุชุฑุงุถูุฉุ ูุดุฑุจ ุงูุญููุจ**! ๐ผ๐ญ\n\n" +
 "โข ุฃูุง ูููุฐุฌ: Astr-a2.1.1\n" +
 "โข ุงูููุงุฑุงุช: ุงูุฅุฌุงุจุฉ ุนูู ุงูุฃุณุฆูุฉุ ุงูุจุฑูุฌุฉุ ุงูุฏุฑุฏุดุฉุ ููููู ูุทูููุง!\n\n" +
 "ุงูุชุจ 'ูุงุชูุฑ ุชุนููู' ูุฅุนุงุฏุฉ ุถุจุท ูุญุงุฏุซุชูุง."
      );
    }

    try {
      // Format chat history for follow-up response
      let history = mistralHistory[event.senderID].map(entry => `${entry.role}: ${entry.content}`).join("\n");
      let finalQuery = history ? `ุงูุณูุง:\n${history}\n\nูุณุชุฎุฏู: ${query}` : query;

      // Call CAT-X API
      const apiUrl = `https://cat-x-xr1v.onrender.com/catx?q=${encodeURIComponent(finalQuery)}`;
      const res = await axios.get(apiUrl);

      if (!res.data || !res.data.response) {
        return message.reply("โ | ูู ูุชู ุงุณุชูุงู ุงุณุชุฌุงุจุฉ ุตุงูุญุฉ ูู Astr-a. ูุฏ ุชููู ูุงุฌูุฉ ุงูุจุฑูุฌุฉ ูุนุทูุฉ.");
      }

      const { response, model, version } = res.data;
      let catxResponse = response;

      // Store conversation history
      mistralHistory[event.senderID].push({ role: 'ูุณุชุฎุฏู', content: query });
      mistralHistory[event.senderID].push({ role: 'ASTR-A', content: catxResponse });

      if (mistralHistory[event.senderID].length > maxStorageMessage) {
        mistralHistory[event.senderID].shift();
      }

      return message.reply({
        body: `๐ฑ โฏ ุฃุณุชุฑุง(${model} v${version})**\n\n${catxResponse}\n\n`,
        attachment: null
      });
    } catch (error) {
      console.error("ุฎุทุฃ ูู ูุงุฌูุฉ ุจุฑูุฌุฉ ุชุทุจููุงุช Astr-a.:", error);
      return message.reply("โ | ูุดู ูู ุงูุญุตูู ุนูู ุฑุฏ ูู Astr-a. ูุฏ ูููู ุงูุฎุงุฏู ูุดุบููุงู. ูุฑุฌู ุงููุญุงููุฉ ูุงุญููุง.");
    }
  },

  onChat: async ({ event, message }) => {
    // Handle when someone mentions the bot in a chat
    if (event.body && event.body.toLowerCase().includes('๐')) {
      message.reply("๐บ| ููุงู! ูุฑุญุจูุง! ุงูุชุจ 'ูุงุชูุฑ' ูุชุจูุนูุง ุจุณุคุงูู ููุฏุฑุฏุดุฉ ูุนู!");
    }
  }
};
